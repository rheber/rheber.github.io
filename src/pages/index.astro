---
import { getCollection } from "astro:content";
import { marked } from 'marked';
import { SITE_DESCRIPTION } from "../consts";
import BaseLayout from "../layouts/BaseLayout.astro";
import BlogPostTruncated from "../layouts/BlogPostTruncated.astro";
import { zip } from "../helpers";

const removeElementsFromFirstH2 = (article: string) => {
	const re = /(##.*)/gs;
	return article.replace(re, "");
};

const recentPosts = (await getCollection("blog")).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
).slice(0, 3);
const recentPostRenders = await Promise.all(recentPosts.map(post => {
	return post.render();
}));
const recentPostsWithContent = zip(recentPosts, recentPostRenders);
---

<BaseLayout title={SITE_DESCRIPTION}>
	{recentPostsWithContent.map((item) => {
		const Content = item[1].Content;
		return (
			<BlogPostTruncated
				title={item[0].data.title}
				pubDate={item[0].data.pubDate}
				minutesRead={item[1].remarkPluginFrontmatter.minutesRead}
				slug={`blog/${item[0].slug}`}
			>
				<div set:html={marked.parse(removeElementsFromFirstH2(item[0].body))}/>
			</BlogPost>
		);
	})}
</BaseLayout>
